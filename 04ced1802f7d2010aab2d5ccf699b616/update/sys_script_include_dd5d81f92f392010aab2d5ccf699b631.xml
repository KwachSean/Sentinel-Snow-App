<?xml version="1.0" encoding="UTF-8"?><record_update table="sys_script_include">
    <sys_script_include action="INSERT_OR_UPDATE">
        <access>package_private</access>
        <active>true</active>
        <api_name>x_556309_microsoft.getIncidentComments</api_name>
        <caller_access/>
        <client_callable>false</client_callable>
        <description/>
        <name>getIncidentComments</name>
        <script><![CDATA[//---------------------------------------------------------------
// Get comments to incident
function getIncidentComments (incidentId, lastSync) {

    var hasNext = false;
    var comments = [];
    var filteredComments = [];
    var filter = null;
    if(lastSync) {

        filter = '(properties/createdTimeUtc gt ' + lastSync + ')';
    }

    // Prepare request
    incidentId = incidentId + '/comments';
    var pagedRequest = buildRESTMessageV2(null, 'get', filter, incidentId);

    do {    
        // Request Sentinel incidents
        var pagedResponse = pagedRequest.execute();
        var pagedResponseBody = pagedResponse.getBody();
        var pagedhttpStatus = pagedResponse.getStatusCode();
        var pagedObj = JSON.parse(pagedResponseBody);

        if(pagedhttpStatus == 200) {
            
            comments = comments.concat(pagedObj.value);
        }
        else {
            log('Error code: ' + pagedhttpStatus + '\nMessage:\n' + pagedResponseBody);
        }


        if (pagedObj['nextLink']) { // if true, more incidents available

            hasNext = true;
            var skip = getSkipToken(pagedObj['nextLink']);
            pagedRequest = buildRESTMessageV2(skip, 'get', filter, incidentId); 
        }
        else {
            hasNext = false;
        }

    }while (hasNext);
    
    // Filters out the comments created by SNOW. This app adds "(Work notes)" when adding a comment to Sentinel
    /*filteredComments = comments.filter(function (comment) {
        return comment.properties.message.toLowerCase().indexOf('(work notes)') === -1;
    });
    filteredComments = filteredComments.filter(function (comment) {
        return comment.properties.message.toLowerCase().indexOf('[code]') === -1;
    });
    */
    
    filteredComments = comments.filter(function (comment) {
        return comment.properties.message.toLowerCase().indexOf('<div class="snow">') === -1;
    });

    // Sort comments by creation date
    if(filteredComments) {
        filteredComments.sort(function(a, b){
            var x = new Date(a.properties.createdTimeUtc);
            var y = new Date(b.properties.createdTimeUtc);
            if (x < y) {return -1;}
            if (x > y) {return 1;}
            return 0;
        });
        filteredComments.reverse();
    }

    return filteredComments;
}]]></script>
        <sys_class_name>sys_script_include</sys_class_name>
        <sys_created_by>sebmolendijk@hotmail.com</sys_created_by>
        <sys_created_on>2021-01-19 19:18:08</sys_created_on>
        <sys_id>dd5d81f92f392010aab2d5ccf699b631</sys_id>
        <sys_mod_count>21</sys_mod_count>
        <sys_name>getIncidentComments</sys_name>
        <sys_package display_value="Microsoft Azure Sentinel" source="x_556309_microsoft">04ced1802f7d2010aab2d5ccf699b616</sys_package>
        <sys_policy>read</sys_policy>
        <sys_scope display_value="Microsoft Azure Sentinel">04ced1802f7d2010aab2d5ccf699b616</sys_scope>
        <sys_update_name>sys_script_include_dd5d81f92f392010aab2d5ccf699b631</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2021-02-12 09:48:51</sys_updated_on>
    </sys_script_include>
</record_update>
